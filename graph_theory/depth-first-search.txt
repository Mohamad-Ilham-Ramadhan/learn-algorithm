=== Overview === 

   Depth first search is the most fundamental search algorithm used to explore nodes and edges of a graph. It runs with a time complexity of O(V + E) and is often used as a building block in other algorithms. 

   By itself the DFS isn't all that useful, but when augmented to perform other tasks such as [count connected components], [determine connectivity], or [find bridges/articulation points] then DFS really shines.

   We can augment the DFS to: 
   - Compute a graph's minimum spanning tree 
   - Detect and find cycles in a graph 
   - Check if a graph is bipartite
   - Find strongly connected components (in Tarjan's algorithm)
   - Topologically sort the nodes of a graph 
   - Find bridges and articulation points
   - Find augmenting paths in a flow network
   - Generate mazes